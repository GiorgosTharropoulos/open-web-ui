services:
  caddy:
    image: caddy:2-alpine
    container_name: caddy-reverse-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ${TLS_CERT_PATH}:/etc/ssl/certs/certificate.pem:ro
      - ${TLS_KEY_PATH}:/etc/ssl/certs/key.pem:ro
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
      - TLS_CERT_PATH=${TLS_CERT_PATH}
      - TLS_KEY_PATH=${TLS_KEY_PATH}
    networks:
      - webui-network
    depends_on:
      - open-webui

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    restart: unless-stopped
    environment:
      - OPENAI_API_BASE_URL=https://api.z.ai/api/coding/paas/v4
      - OPENAI_API_KEY=${ZAI_API_KEY}
      - WEBUI_SECRET=${WEBUI_SECRET}
    volumes:
      - open-webui:/app/backend/data
    networks:
      - webui-network

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 300 open-webui
    networks:
      - webui-network
    depends_on:
      - open-webui

networks:
  webui-network:
    driver: bridge

volumes:
  open-webui:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local
